// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoncotesLibrary.Migrations
{
    [DbContext(typeof(LoncotesLibraryDbContext))]
    partial class LoncotesLibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Loncotes.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Paid")
                        .HasColumnType("boolean");

                    b.Property<int>("PatronId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PatronId");

                    b.ToTable("Checkouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckoutDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 7,
                            Paid = true,
                            PatronId = 1,
                            ReturnDate = new DateTime(2023, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CheckoutDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 11,
                            Paid = true,
                            PatronId = 4,
                            ReturnDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CheckoutDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 14,
                            Paid = false,
                            PatronId = 7,
                            ReturnDate = new DateTime(2023, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CheckoutDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 17,
                            Paid = false,
                            PatronId = 9,
                            ReturnDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CheckoutDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 20,
                            Paid = true,
                            PatronId = 10,
                            ReturnDate = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CheckoutDate = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 8,
                            Paid = true,
                            PatronId = 2
                        },
                        new
                        {
                            Id = 7,
                            CheckoutDate = new DateTime(2023, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 13,
                            Paid = true,
                            PatronId = 1
                        },
                        new
                        {
                            Id = 8,
                            CheckoutDate = new DateTime(2023, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 12,
                            Paid = true,
                            PatronId = 6
                        },
                        new
                        {
                            Id = 9,
                            CheckoutDate = new DateTime(2023, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 5,
                            Paid = false,
                            PatronId = 3
                        },
                        new
                        {
                            Id = 10,
                            CheckoutDate = new DateTime(2023, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaterialId = 9,
                            Paid = true,
                            PatronId = 5
                        });
                });

            modelBuilder.Entity("Loncotes.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nonfiction"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mystery"
                        });
                });

            modelBuilder.Entity("Loncotes.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OutOfCirculationSince")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MaterialName = "The Great Gatsby",
                            MaterialTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 4,
                            MaterialName = "National Geographic",
                            MaterialTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 2,
                            MaterialName = "Inception (DVD)",
                            MaterialTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 3,
                            MaterialName = "The Brief History of Time",
                            MaterialTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 5,
                            MaterialName = "The Da Vinci Code (E-book)",
                            MaterialTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 3,
                            MaterialName = "The Art of War",
                            MaterialTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 4,
                            MaterialName = "Time Magazine",
                            MaterialTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 2,
                            MaterialName = "The Matrix (DVD)",
                            MaterialTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 3,
                            MaterialName = "Sapiens (Audio Book)",
                            MaterialTypeId = 4
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 2,
                            MaterialName = "Neuromancer (E-book)",
                            MaterialTypeId = 5
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 4,
                            MaterialName = "National Geographic Kids",
                            MaterialTypeId = 2
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 1,
                            MaterialName = "Spider-Man: Into the Spider-Verse (DVD)",
                            MaterialTypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 3,
                            MaterialName = "A Brief History of Nearly Everything",
                            MaterialTypeId = 4
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 2,
                            MaterialName = "The Hitchhiker's Guide to the Galaxy (E-book)",
                            MaterialTypeId = 5
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 5,
                            MaterialName = "Cook's Illustrated",
                            MaterialTypeId = 4
                        },
                        new
                        {
                            Id = 16,
                            GenreId = 1,
                            MaterialName = "Black Mirror (DVD)",
                            MaterialTypeId = 3
                        },
                        new
                        {
                            Id = 17,
                            GenreId = 1,
                            MaterialName = "The Catcher in the Rye",
                            MaterialTypeId = 1,
                            OutOfCirculationSince = new DateTime(2011, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            GenreId = 4,
                            MaterialName = "Wired Magazine",
                            MaterialTypeId = 2
                        },
                        new
                        {
                            Id = 19,
                            GenreId = 5,
                            MaterialName = "The Shining (DVD)",
                            MaterialTypeId = 3,
                            OutOfCirculationSince = new DateTime(1999, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            GenreId = 5,
                            MaterialName = "The Girl with the Dragon Tattoo (E-book)",
                            MaterialTypeId = 5
                        });
                });

            modelBuilder.Entity("Loncotes.Models.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckoutDays")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MaterialTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckoutDays = 30,
                            Name = "Book"
                        },
                        new
                        {
                            Id = 2,
                            CheckoutDays = 14,
                            Name = "Magazine"
                        },
                        new
                        {
                            Id = 3,
                            CheckoutDays = 7,
                            Name = "DVD"
                        },
                        new
                        {
                            Id = 4,
                            CheckoutDays = 21,
                            Name = "Audio Book"
                        },
                        new
                        {
                            Id = 5,
                            CheckoutDays = 14,
                            Name = "E-book"
                        });
                });

            modelBuilder.Entity("Loncotes.Models.Patron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patrons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "4199 High Street",
                            Email = "lalecksen@gmail.com",
                            FirstName = "Lukas",
                            IsActive = true,
                            LastName = "Alecksen"
                        },
                        new
                        {
                            Id = 2,
                            Address = "123 Main Street",
                            Email = "asmith@gmail.com",
                            FirstName = "Anna",
                            IsActive = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            Address = "456 Oak Avenue",
                            Email = "jdoe@gmail.com",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 4,
                            Address = "789 Pine Lane",
                            Email = "ejohnson@gmail.com",
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 5,
                            Address = "101 Cedar Road",
                            Email = "dbrown@gmail.com",
                            FirstName = "Daniel",
                            IsActive = true,
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 6,
                            Address = "202 Birch Street",
                            Email = "omiller@gmail.com",
                            FirstName = "Olivia",
                            IsActive = true,
                            LastName = "Miller"
                        },
                        new
                        {
                            Id = 7,
                            Address = "303 Maple Avenue",
                            Email = "mwhite@gmail.com",
                            FirstName = "Michael",
                            IsActive = true,
                            LastName = "White"
                        },
                        new
                        {
                            Id = 8,
                            Address = "404 Elm Boulevard",
                            Email = "sdavis@gmail.com",
                            FirstName = "Sophia",
                            IsActive = true,
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = 9,
                            Address = "505 Oak Drive",
                            Email = "eanderson@gmail.com",
                            FirstName = "Ethan",
                            IsActive = false,
                            LastName = "Anderson"
                        },
                        new
                        {
                            Id = 10,
                            Address = "606 Pine Circle",
                            Email = "amartinez@gmail.com",
                            FirstName = "Ava",
                            IsActive = false,
                            LastName = "Martinez"
                        });
                });

            modelBuilder.Entity("Loncotes.Models.Checkout", b =>
                {
                    b.HasOne("Loncotes.Models.Material", "Material")
                        .WithMany("Checkouts")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loncotes.Models.Patron", "Patron")
                        .WithMany("Checkouts")
                        .HasForeignKey("PatronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Patron");
                });

            modelBuilder.Entity("Loncotes.Models.Material", b =>
                {
                    b.HasOne("Loncotes.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loncotes.Models.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("Loncotes.Models.Material", b =>
                {
                    b.Navigation("Checkouts");
                });

            modelBuilder.Entity("Loncotes.Models.Patron", b =>
                {
                    b.Navigation("Checkouts");
                });
#pragma warning restore 612, 618
        }
    }
}
